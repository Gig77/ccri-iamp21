function PGEReport
(
  	CSV	   query,
  	GTF	   reference,
  	string title
) -> (Latex report) 
{
	@out.document.filename = "document.tex"
	pge = PGE
	(
		query=query, 
		reference=reference, 
		sectionTitle="PGE ideogram: "+title,
		maxRegionsPerChr=20,
		cmdPrefix="docker run -w ${metadata_componentPath} --volumes-from anduril-moksiskaan cfrech/anduril-pge /root/init.sh"
	)
	
	// translate Ensembl gene IDs into HGNC symbols using gene annotation table
	expanded = ExpandCollapse(pge.enrichedRegions, listCols="genes")
	annotated = TableQuery
	(
		table1 = expanded, 
		table2 = geneAnnot,
		table3 = query,
		query  = 
			'''
				SELECT A."chr", A."start", A."end", A."pvalue", A."pvalueadj", A."common", A."size", 
				       GROUP_CONCAT('\textcolor' || CASEWHEN(C."fc">0, '{red}{', '{blue}{') || IFNULL(B."Associated Gene Name", A."genes") || '}' SEPARATOR ', ') AS HGNC 
				FROM table1 A 
					 LEFT OUTER JOIN table2 B ON A."genes" = B."Ensembl Gene ID"
					 LEFT OUTER JOIN table3 C ON A."genes" = C."ids"
				GROUP BY A."chr", A."start", A."end", A."pvalue", A."pvalueadj", A."common", A."size"
			'''
	)

	enrichedRegions = CSV2Latex
	(
		tabledata	 = annotated,
        caption      = "List of significantly enriched regions comparing "+title+". Differentially expressed genes (DEGs) found in those "+
                       "regions are shown in the last column, whereas up-regulated genes are shown in \\textcolor{red}{red} and " +
                       "down-regulated genes are shown in \\textcolor{blue}{blue}. Regions sorted by p-value with more significant " +
                       "regions shown at the top.",
//      columns      = "chr,start,end,pvalue,pvalueadj,common,size",
		rename       = "HGNC=DEGs in region",
//      listCols     = "Genes",
		colFormat    = "crrrrccp{9.0cm}",
        numberFormat = "pvalue=#0.0E00,pvalueadj=#0.0E00,HGNC=RAW_LATEX",
        countRows    = true,
        skipEmpty    = true,
        sectionType  = "subsection",
        section      = "PGE regions: "+title
    )
    
    pgeReport = LatexCombiner(latex1=pge.document, latex2=enrichedRegions.report, pagebreak=true)
	
	return pgeReport
}
