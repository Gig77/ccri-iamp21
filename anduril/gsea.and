function getGSEAReportMSigDB
(
	record enrichedUp,
	record enrichedDn,
	record groups
) -> (Latex report)
{
	reports = record()

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// PATHWAYS
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Pathway"
	title = "MSigDB 5.0 pathway gene sets"
	description = "Gene sets in this category represent canonical representations of a biological process compiled by domain experts. Pathway source databases include KEGG, REACTOME, BIOCARTA, and PID."
	fdr = 0.001
	filter = StringInput(content='''table.out <- table1[table1$CATEGORY=="MSIGDB_C2_PATHWAYS" & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-6,
		regexCategoryNames = "MSIGDB_C2_PATHWAYS",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.7,
		pdfWidth = 10,
		pdfHeight = 15,
		figureHeight = 24,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// GO TERMS
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "GO"
	title = "MSigDB 5.0 GO terms"
	description = "Gene sets are named by gene ontology (GO) terms and contain genes annotated by that term. Includes gene sets derived from GO biological processes (BP), cellular components (CC), and molecular functions (MF)."
	fdr = 0.001
	filter = StringInput(content='''table.out <- table1[grepl("MSIGDB_C5_GO", table1$CATEGORY, perl=T) & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-6,
		regexCategoryNames = "MSIGDB_C5_GO",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.8,
		pdfWidth = 10,
		pdfHeight = 15,
		figureHeight = 24,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// POSITIONAL GENE SETS (C1)
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Positional"
	title = "MSigDB 5.0 positional gene sets"
	description = "Gene sets corresponding to each human chromosome and each cytogenetic band that has at least one gene."
	fdr = 0.001
	filter = StringInput(content='''table.out <- table1[table1$CATEGORY=="MSIGDB_C1_POSITIONAL" & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-8,
		regexCategoryNames = "MSIGDB_C1_POSITIONAL",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.9,
		pdfWidth = 10,
		pdfHeight = 15,
		figureHeight = 24,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}
	
	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// MIR TARGETS
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Mir"
	title = "MSigDB 5.0 miRNA targets"
	description = "Sets of genes that share a 3'-UTR microRNA binding motif."
	fdr = 0.1
	filter = StringInput(content='''table.out <- table1[table1$CATEGORY=="MSIGDB_C3_MOTIF_MIR" & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 0.01,
		regexCategoryNames = "MSIGDB_C3_MOTIF_MIR",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.9,
		pdfWidth = 10,
		pdfHeight = 15,
		figureHeight = 24,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// CUSTOM GENE SETS
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Custom"
	title = "Custom gene sets"
	description = "Custom (project-specific) gene sets not part of MSigDB."
	fdr = 0.3
	filter = StringInput(content='''table.out <- table1[grepl("(PREDICTED|VALIDATED|HENNING)", table1$NAME, perl=T) & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 0.05,
		regexGeneSetNames = "(PREDICTED|VALIDATED|HENNING)",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.9,
		pdfWidth = 10,
		pdfHeight = 8,
		figureHeight = 18,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// SIGNALING
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Signaling"
	title = "MSigDB 5.0 signaling gene sets"
	description = "MSigDB 5.0 gene sets in this category contain the phrase 'SIGNALING' in their name."
	fdr = 0.01
	filter = StringInput(content='''table.out <- table1[grepl("SIGNALING", table1$NAME, perl=T) & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-6,
		regexGeneSetNames = "SIGNALING",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.7,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// TF TARGETS
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "TFT"
	title = "MSigDB 5.0 TF targets"
	description = "These gene sets contain genes that share a transcription factor binding site defined in the TRANSFAC (version 7.4, http://www.gene-regulation.com/) " +
			      "database. Each of these gene sets is annotated by a TRANSFAC record."
	fdr = 0.01
	filter = StringInput(content='''table.out <- table1[table1$CATEGORY=="MSIGDB_C3_MOTIF_TFT" & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 0.001,
		regexCategoryNames = "MSIGDB_C3_MOTIF_TFT",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.8,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// CHEMICAL PERTURBATION
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "ChemPert"
	title = "MSigDB 5.0 chemical perturbation"
	description = "These gene sets represent expression signatures of genetic and chemical perturbations. A number of these gene sets come in pairs: an xxx\\_UP (xxx\\_DN) gene set " +
			      "representing genes induced (repressed) by the perturbation. The MSigDB gene set page for each gene set lists the PubMed citation on which it is based."
	fdr = 0.001
	nes = 2.5
	filter = StringInput(content='''table.out <- table1[table1$CATEGORY=="MSIGDB_C2_CGP" & grepl("(_UP|_DN)$", table1$NAME, perl=T) & table1$'FDR q-val' <= ''' + fdr + ''' & table1$NES >= '''+nes+''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-6,
		NESCutoff = nes,
		regexCategoryNames = "MSIGDB_C2_CGP",
		regexGeneSetNames = "(_UP|_DN)$",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.7,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)


	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	// OTHER
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	category = "Other"
	title = "Other MSigDB 5.0 gene sets"
	description = "These MSigDB 5.0 gene sets were significantly enriched and not assigned to any of the above categories."
	fdr = 0.001
	filter = StringInput(content='''table.out <- table1[!grepl("(MSIGDB_C1_POSITIONAL|MSIGDB_C2_PATHWAYS|MSIGDB_C3_MOTIF|MSIGDB_C4_COMPUTATIONAL|MSIGDB_C5_GO)", table1$CATEGORY, perl=T) & !grepl("(_UP|_DN)$", table1$NAME, perl=T) & table1$'FDR q-val' <= ''' + fdr + ''',]''', @name="filter"+category)

	heatmap = GSEAHeatmap
	(
		title = title,
		caption = title + ".",
		enrichedUp = enrichedUp,
		enrichedDown = enrichedDn,
		sectionTitle = "Graphical overview",
		sectionType = "subsubsection",
		sigCutoff = fdr,
		hsigCutoff = 1e-6,
		regexCategoryNamesExclude = "(MSIGDB_C1_POSITIONAL|MSIGDB_C2_PATHWAYS|MSIGDB_C3_MOTIF|MSIGDB_C4_COMPUTATIONAL|MSIGDB_C5_GO)",
		regexGeneSetNamesExclude = "(_UP|_DN)$",
		RFilterExpr = "FDR.q.val.iAMPvsNoniAMP <= "+fdr+" | FDR.q.val.DSvsNonDS <= "+fdr+" | FDR.q.val.ERvsNonER <= "+fdr+" | FDR.q.val.iAMPvsDS <= "+fdr+" | FDR.q.val.iAMPvsER <= "+fdr+" | FDR.q.val.ERvsDS <= "+fdr,
		cexRow = 0.7,
		@name = "heatmap"+category
	)
	
	tableReports = record()
	for ID, group : groups 
	{			
		includeTableReport = (ID == "iAMPvsDS" || ID == "iAMPvsER" || ID == "ERvsDS" || ID == "iAMPvsNoniAMP" || ID == "DSvsNonDS" || ID == "ERvsNonER")

		filteredUp = REvaluate(table1 = enrichedUp[ID], script = filter, @name = "filtered"+category+ID+"Up", @enabled = includeTableReport)
		tableReportUp = latexTable 
		(
			tabledata = filteredUp.table, 
			caption   = title + " enriched for genes up-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Up",
			@enabled  = includeTableReport
		) 		

		filteredDn = REvaluate(table1 = enrichedDn[ID], script = filter, @name = "filtered"+category+ID+"Dn", @enabled = includeTableReport)
		tableReportDn = latexTable 
		(
			tabledata = filteredDn.table, 
			caption   = title + " enriched for genes down-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdr,
			@name     = "table"+category+ID+"Dn",
			@enabled  = includeTableReport
		)

		tableReports[ID] = LatexCombiner 
		(
			latex1 = tableReportUp, 
			latex2 = tableReportDn,
			sectionTitle = ID,
			sectionType = "subsubsection",
			@name       = "tableReport"+category+ID,
			@enabled  = includeTableReport
		)
	}

	heatmapWithHeader = LatexCombiner
	(
		head = description,
		latex1 = heatmap,
		@name = "heatmapHeader"+category
	)
	
	reports[category] = LatexCombiner
	(
		latex1 = heatmapWithHeader,
		array = tableReports,
		sectionTitle = title,
		sectionType = "subsection",
		@name = "report"+category
	)


	// ----
	
	reportFinal = LatexCombiner
	(
		array = reports,
		sectionTitle = "GSEA MSigDB 5.0",
		sectionType = "section"
	)
	
	return reportFinal
}

// ---------------------------------------------------------------------------------------------------------------------------

function latexTable
(
	CSV    tabledata,
	string caption,
	float  minFDR,
	float  minNES = 0,
	string sectionTitle = "",
	string sectionType = ""
) -> (Latex report)
{
	captionNES = ""
	if (minNES > 0) {
		captionNES = "In addition, because there were too many significant hits, a minimum absolute NES of " + minNES + " was required. "
	}

	// allows Latex to break lines at underscores in column containing gene set names
	content = REvaluate
	(
		table1 = tabledata,
		script = StringInput(content=
			'''
			table.out <- table1
			table.out$NAME <- gsub('_', ' ', table.out$NAME, fixed=T)			
			''')
	)

	latex = CSV2Latex
	(
		tabledata    = content.table,
		attach       = false,
		caption      = caption + " FDR q-value threshold is " + minFDR + ". " + captionNES + "Gene sets with less than 10 or more than 500 genes were excluded from analysis. " +
		               "Table sorted by normalized enrichment score (NES) from most to least enriched. The last column shows genes contributing to the enrichment together with their rank in the expression-sorted input gene list.",
		columns      = "NAME,SIZE,NES,FDR q-val,CORE_GENES",
		colFormat    = "p{4.5cm}crrp{9cm}",
		countRows    = true,
		dropMissing  = false,
		listCols     = "",
		rename       = "NAME=Gene set,SIZE=Size,CORE_GENES=Core enrichment genes (rank)",
		numberFormat = "NES=#0.00,FDR q-val=#0.0E00",
		pageBreak    = false,
		section      = sectionTitle,
		sectionType  = sectionType,
		skipEmpty    = true
	)
	
	return latex.report
}
	
	