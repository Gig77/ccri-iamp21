function processResult(CSV enrichedGeneSets) -> (CSV result)
{
	processed = REvaluate
	(
		table1 = enrichedGeneSets,
		script = StringInput(content=
			'''
			table.out <- table1
			
			# assign gene set to category
			table.out$CATEGORY <- NA
			table.out$CATEGORY[grepl("^CHR[\\dXY]", table.out$NAME, perl=T)] <- "POSITIONAL"
			table.out$CATEGORY[grepl("(^MIR-|,MIR-)", table.out$NAME, perl=T)] <- "MIR_TARGETS"
			table.out$CATEGORY[grepl("SIGNALING", table.out$NAME, perl=T)] <- "SIGNALING"
			table.out$CATEGORY[grepl("(REACTOME|KEGG|PID_|BIOCARTA)", table.out$NAME, perl=T)] <- "PATHWAY"
			table.out$CATEGORY[grepl("V\\$", table.out$NAME, perl=T)] <- "TF_TARGETS"
			table.out$CATEGORY[grepl("(_UP|_DN)$", table.out$NAME, perl=T)] <- "PERTURBATION"
			table.out$CATEGORY[grepl("^(CAR_|GCM_|GNF2_|MORF_)", table.out$NAME, perl=T)] <- "CANCER_NEIGHBORHOOD"
			table.out$CATEGORY[grepl("^MODULE_", table.out$NAME, perl=T)] <- "MODULE"
			table.out$CATEGORY[grepl("(PREDICTED|VALIDATED|HENNING)", table.out$NAME, perl=T)] <- "CUSTOM"
			table.out$CATEGORY[is.na(table.out$CATEGORY)] <- "OTHER"
			
			# allows Latex to break lines at underscores in column containing gene set names
			table.out$NAME <- gsub('_', ' ', table.out$NAME, fixed=T)
			
			''')
	)
	
	return processed.table
}

function getGSEAReport
(
	CSV    enrichedUp,
	CSV    enrichedDown,
	string ID,
	record group,
	string sectionTitle = "",
	string sectionType = ""
) -> (Latex report)
{
	gseaReportProcessedUp = processResult(enrichedGeneSets = enrichedUp)
	gseaReportProcessedDn = processResult(enrichedGeneSets = enrichedDown)

	// create reports by category
	//---
	genesetsByDirection = record()
	genesetsByDirection["up"] = gseaReportProcessedUp.result
	genesetsByDirection["down"] = gseaReportProcessedDn.result

	gseaReportAll = record()
	
	//-----------------------------------
	// POSITIONAL GENE SETS (C1)
	//-----------------------------------

	fdrChr = 0.001
	gseaReportsChr = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportChrTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="POSITIONAL" & table1$'FDR q-val' <= ''' + fdrChr + ''',]'''),
			@name = "gseaReportChrTable" + dir
		)
	
		gseaReportsChr[dir] = latexTable 
		(
			tabledata = gseaReportChrTable.table,
			caption   = "MSigDB 5.0 positional gene sets (C1) enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrChr,
			@name     = "gseaReportsChr"+dir
		) 		
	}
	
	gseaReportsChrWithHeader = LatexCombiner
	(
		head = "Gene sets corresponding to each human chromosome and each cytogenetic band that has at least one gene.",
		array = gseaReportsChr
	)
	
	gseaReportAll["Chr"] = LatexCombiner
	(
		array = gseaReportsChrWithHeader,
		sectionTitle = "Positional gene sets",
		sectionType = "subsubsection"
	)
	

	//-----------------------------------
	// MIR TARGET GENE SETS
	//-----------------------------------

	fdrMir = 0.1
	gseaReportsMir = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportMirTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="MIR_TARGETS" & table1$'FDR q-val' <= ''' + fdrMir + ''',]'''),
			@name = "gseaReportMirTable" + dir
		)

		gseaReportsMir[dir] = latexTable 
		(
			tabledata = gseaReportMirTable.table,
			caption   = "MSigDB 5.0 miRNA target gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrMir,
			@name     = "gseaReportsMir"+dir
		) 		
	}

	gseaReportsMirWithHeader = LatexCombiner
	(
		head = "Sets of genes that share a 3'-UTR microRNA binding motif.",
		array = gseaReportsMir
	)
	
	gseaReportAll["Mir"] = LatexCombiner
	(
		array = gseaReportsMirWithHeader,
		sectionTitle   = "miRNA target gene sets",
		sectionType = "subsubsection"		
	)

	//-----------------------------------
	// CUSTOM GENE SETS
	//-----------------------------------

	fdrCustom = 0.3
	gseaReportsCustom = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportCustomTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="CUSTOM" & table1$'FDR q-val' <= ''' + fdrCustom + ''',]'''),
			@name = "gseaReportCustomTable" + dir
		)

		gseaReportsCustom[dir] = latexTable 
		(
			tabledata = gseaReportCustomTable.table,
			caption   = "Custom gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrCustom,
			@name     = "gseaReportsCustom"+dir
		) 		
	}

	gseaReportsCustomWithHeader = LatexCombiner
	(
		head = "User-defined gene sets not part of MSigDB.",
		array = gseaReportsCustom
	)
	
	gseaReportAll["Custom"] = LatexCombiner
	(
		array = gseaReportsCustomWithHeader,
		sectionTitle   = "Custom gene sets",
		sectionType = "subsubsection"		
	)

	//-----------------------------------
	// SIGNALING
	//-----------------------------------

	fdrSignaling = 0.01
	gseaReportsSignaling = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportSignalingTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="SIGNALING" & table1$'FDR q-val' <= ''' + fdrSignaling + ''',]'''),
			@name = "gseaReportSignalingTable" + dir
		)

		gseaReportsSignaling[dir] = latexTable 
		(
			tabledata = gseaReportSignalingTable.table,
			caption   = "MSigDB 5.0 signaling gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrSignaling,
			@name     = "gseaReportsSignaling"+dir
		) 		
	}

	gseaReportsSignalingWithHeader = LatexCombiner
	(
		head = "All gene sets in this category contain the phrase 'SIGNALING' as part of their name.",
		array = gseaReportsSignaling
	)
	
	gseaReportAll["Signaling"] = LatexCombiner
	(
		array = gseaReportsSignalingWithHeader,
		sectionTitle   = "Signaling gene sets",
		sectionType = "subsubsection"		
	)

	//-----------------------------------
	// PATHWAYS
	//-----------------------------------

	fdrPathway = 0.001
	gseaReportsPathway = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportPathwayTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="PATHWAY" & table1$'FDR q-val' <= ''' + fdrPathway + ''',]'''),
			@name = "gseaReportPathwayTable" + dir
		)

		gseaReportsPathway[dir] = latexTable 
		(
			tabledata = gseaReportPathwayTable.table,
			caption   = "MSigDB 5.0 canonical pathways enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrPathway,
			@name     = "gseaReportsPathway"+dir
		) 		
	}

	gseaReportsPathwayWithHeader = LatexCombiner
	(
		head = "Gene sets in this category represent canonical representations of a biological process compiled by domain experts. Pathway source databases include KEGG, REACTOME, BIOCARTA, and PID.",
		array = gseaReportsPathway
	)
	
	gseaReportAll["Pathway"] = LatexCombiner
	(
		array = gseaReportsPathwayWithHeader,
		sectionTitle   = "Pathway gene sets",
		sectionType = "subsubsection"		
	)

	//-----------------------------------
	// TRANSCRIPTION FACTOR TARGETS
	//-----------------------------------

	fdrTFtarget = 0.01
	gseaReportsTFtarget = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportTFtargetTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="TF_TARGETS" & table1$'FDR q-val' <= ''' + fdrTFtarget + ''',]'''),
			@name = "gseaReportTFtargetTable" + dir
		)

		gseaReportsTFtarget[dir] = latexTable 
		(
			tabledata = gseaReportTFtargetTable.table,
			caption   = "MSigDB 5.0 transcription factor target gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrTFtarget,
			@name     = "gseaReportsTFtarget"+dir
		) 		
	}

	gseaReportsTFtargetWithHeader = LatexCombiner
	(
		head = "These gene sets contain genes that share a transcription factor binding site defined in the TRANSFAC (version 7.4, http://www.gene-regulation.com/) " +
			   "database. Each of these gene sets is annotated by a TRANSFAC record.",
		array = gseaReportsTFtarget
	)
	
	gseaReportAll["TFtarget"] = LatexCombiner
	(
		array = gseaReportsTFtargetWithHeader,
		sectionTitle   = "TF target gene sets",
		sectionType = "subsubsection"		
	)

	//-----------------------------------
	// CHEMICAL PERTURBATIONS
	//-----------------------------------

	fdrChemPert = 1e-6
	nesChemPert = 0
	gseaReportsChemPert = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportChemPertTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="PERTURBATION" & table1$'FDR q-val' <= ''' + fdrChemPert + ''' & abs(table1$NES) >= ''' + nesChemPert + ''',]'''),
			@name = "gseaReportChemPertTable" + dir
		)

		gseaReportsChemPert[dir] = latexTable 
		(
			tabledata = gseaReportChemPertTable.table,
			caption   = "MSigDB 5.0 chemical perturbation gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrChemPert,
			minNES    = nesChemPert,
			@name     = "gseaReportsChemPert"+dir
		) 
	}

	gseaReportsChemPertWithHeader = LatexCombiner
	(
		head = "These gene sets represent expression signatures of genetic and chemical perturbations. A number of these gene sets come in pairs: an xxx\\_UP (xxx\\_DN) gene set " +
			   "representing genes induced (repressed) by the perturbation. The MSigDB gene set page for each gene set lists the PubMed citation on which it is based.",
		array = gseaReportsChemPert
	)
	
	gseaReportAll["ChemPert"] = LatexCombiner
	(
		array = gseaReportsChemPertWithHeader,
		sectionTitle   = "Chemical perturbation gene sets",
		sectionType = "subsubsection"		
	)
		
	//-----------------------------------
	// OTHER
	//-----------------------------------

	fdrOther = 1e-5
	nesOther = 0
	gseaReportsOther = record()
	for dir, genesets : genesetsByDirection 
	{
		gseaReportOtherTable = REvaluate
		(
			table1 = genesets,
			script = StringInput(content='''table.out <- table1[table1$CATEGORY=="OTHER" & table1$'FDR q-val' <= ''' + fdrOther + ''' & abs(table1$NES) >= ''' + nesOther + ''',]'''),
			@name = "gseaReportOtherTable" + dir
		)

		gseaReportsOther[dir] = latexTable 
		(
			tabledata = gseaReportOtherTable.table,
			caption   = "Other, uncategorized MSigDB 5.0 gene sets enriched for genes " + dir + "-regulated in " + group.caseG + " compared to " + group.controlG + " samples.",
			minFDR    = fdrOther,
			minNES    = nesOther,
			@name     = "gseaReportsOther"+dir
		) 
	}

	gseaReportsOtherWithHeader = LatexCombiner
	(
		head = "Miscellaneous MSigDB 5.0 gene sets not assigned to a particular category.",
		array = gseaReportsOther
	)
	
	gseaReportAll["Other"] = LatexCombiner
	(
		array = gseaReportsOtherWithHeader,
		sectionTitle   = "Uncategorized gene sets",
		sectionType = "subsubsection"		
	)

	// final report
	//---	
	gseaReportFinal = LatexCombiner
	(
		array = gseaReportAll,
		sectionTitle = sectionTitle,
		sectionType = sectionType
	)
	
	return gseaReportFinal
}

function latexTable
(
	CSV    tabledata,
	string caption,
	float  minFDR,
	float  minNES = 0,
	string sectionTitle = "",
	string sectionType = ""
) -> (Latex report)
{
	captionNES = ""
	if (minNES > 0) {
		captionNES = "In addition, because there were too many significant hits, a minimum absolute NES of " + minNES + " was required. "
	}
	latex = CSV2Latex
	(
		tabledata    = tabledata,
		attach       = false,
		caption      = caption + " FDR q-value threshold is " + minFDR + ". " + captionNES + "Gene sets with less than 10 or more than 500 genes were excluded from analysis. " +
		               "Table sorted by normalized enrichment score (NES) from most to least enriched. The last column shows genes contributing to the enrichment together with their rank in the expression-sorted input gene list.",
		columns      = "NAME,NES,FDR q-val,CORE_GENES",
		colFormat    = "p{5cm}rrp{9cm}",
		countRows    = true,
		dropMissing  = false,
		listCols     = "",
		rename       = "NAME=Gene set,CORE_GENES=Core enrichment genes (rank)",
		numberFormat = "FDR q-val=#0.0E00",
		pageBreak    = false,
		section      = sectionTitle,
		sectionType  = sectionType,
		skipEmpty    = true
	)
	
	return latex.report
}
	
	